{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"BasicResponse": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"description": "Basic JSON response for controllers"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "mern",
		"version": "1.0.0",
		"description": "Practia MERN",
		"license": {
			"name": "ISC"
		},
		"contact": {
			"name": "Raul Espina"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/hello?name": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Promise of BasicResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BasicResponse"
								}
							}
						}
					}
				},
				"description": "Endpoint to retreive a Message \"Hello {name}\" in JSON",
				"tags": [
					"HelloController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Name of user to be greeted",
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/goodbye": {
			"get": {
				"operationId": "GetMessage",
				"responses": {
					"200": {
						"description": "Promise of BasicResponse",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BasicResponse"
								}
							}
						}
					}
				},
				"description": "EndPoint to reatreive a Message \"GoobBye {name} in Json\"",
				"tags": [
					"GoodByeController"
				],
				"security": [],
				"parameters": [
					{
						"description": "Name include in querya params",
						"in": "query",
						"name": "name",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/users": {
			"get": {
				"operationId": "GetUser",
				"responses": {
					"200": {
						"description": "JSON info user",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Get all user || Get user by id",
				"tags": [
					"UserControllers"
				],
				"security": [],
				"parameters": [
					{
						"description": "optional id for search user by id",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Create a new User",
				"tags": [
					"UserControllers"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "datos del usuario",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"description": "datos del usuario"
							}
						}
					}
				}
			},
			"put": {
				"operationId": "UpdateUse",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Actualizar usuario por ID",
				"tags": [
					"UserControllers"
				],
				"security": [],
				"parameters": [
					{
						"description": "Id del usuario",
						"in": "query",
						"name": "userID",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "informacion del usuario que se desea actualizar",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"description": "informacion del usuario que se desea actualizar"
							}
						}
					}
				}
			},
			"delete": {
				"operationId": "DeleteUser",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Delete user by id",
				"tags": [
					"UserControllers"
				],
				"security": [],
				"parameters": [
					{
						"description": "user id",
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/api/kata": {
			"get": {
				"operationId": "GetKata",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Get all kata || Get kata by ID",
				"tags": [
					"KataController"
				],
				"security": [],
				"parameters": [
					{
						"description": "parametro opcional, id de kata a buscar",
						"in": "query",
						"name": "id",
						"required": false,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"post": {
				"operationId": "CreateKata",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {}
							}
						}
					}
				},
				"description": "Create a new User",
				"tags": [
					"KataController"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}